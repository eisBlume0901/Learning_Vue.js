<script setup>
import { ref } from 'vue';
import { onMounted } from 'vue'; // mounted means the component is ready to be used and loaded on the page

const newOrder = ref('');
const orders = ref(['Elixir of Eternal Luminescence'])
const addOrder = () => {
  if (newOrder.value.trim() !== '') {
    orders.value.push(newOrder.value);
    newOrder.value = '';
  }
}

const deleteOrder = (index) => {
  orders.value.splice(index, 1);
}

// onMounted useful for HTTP requests, or other async operations
onMounted( async () => {
  try {
    // await means wait for the response to come back
    // fetch means request data from a server
    const response = await fetch('https://jsonplaceholder.typicode.com/todos');
    const data = await response.json();
    // Arrow function (JavaScript), Lambda function (Java), Anonymous function (Python)
    orders.value = data.map((order) => order.title);

    console.log(data);
  } catch (error) {
    console.error(error);
  }
})
</script>
<template>
  <h1>Eisblume's Apothecary Shop</h1>


  <form @submit.prevent="addOrder">
    <label for="newOrder">Order</label>
    <input type="text" id="newOrder" name="newOrder" v-model="newOrder">
    <button type="submit">Add Order</button>
  </form>

  <ul>
    <li v-for="(order, index) in orders" :key="order">
      <span>
        {{ order }}
      </span>
      <button @click="deleteOrder(index)">Delete</button>
    </li>
  </ul>
</template>

